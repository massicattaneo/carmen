<use-cases>

    <uc name="start-app">
        <run component="utils" action="init"/>
        <run component="utils" action="loadClients"/>
        <run component="utils" action="loadTransactions"/>
        <run component="utils" action="loadCards"/>
        <run component="utils" action="backupDb"/>
		<run component="utils" action="hideAllPages"/>
		<run component="clients" action="show"/>
        <run component="blackScreen" action="removeCover"/>
    </uc>

	<event component="cards" on="tap-card-new">
		<run component="utils" action="hideAllPages"/>
		<run component="clients" action="closeEdit"/>
		<run component="clients" action="show"/>
		<reset-args/>
		<read value="select"/>
		<run component="clients" action="enterMode"/>
		<reset-args/>
		<wait component="clients" event="tap-client-select"/>
		<set path="activeClient" value="{0}"/>
		<run component="utils" action="hasClientCard"/>
		<if test="{1} === 'true'">
			<run component="blackScreen" action="show"/>
			<run component="popUpWarn" action="show"/>
			<run component="popUpWarn" action="hide"/>
			<run component="blackScreen" action="hide"/>
			<run component="utils" action="hideAllPages"/>
			<run component="cards" action="show"/>
			<run component="cards" action="enterMode"/>
		</if>
		<if test="{1} === 'false'">
			<run component="utils" action="hideAllPages"/>
			<run component="db" action="saveCard"/>
			<run component="cards" action="show"/>
		</if>
	</event>

	<event component="cash" on="tap-transaction-pay">
		<run component="utils" action="hideAllPages"/>
		<run component="clients" action="closeEdit"/>
		<run component="clients" action="show"/>
		<reset-args/>
		<read value="select"/>
		<run component="clients" action="enterMode"/>
		<reset-args/>
		<wait component="clients" event="tap-client-select"/>
		<set path="activeClient" value="{0}"/>
		<run component="utils" action="hideAllPages"/>
		<run component="transactionAdd" action="resetData"/>
		<run component="transactionAdd" action="show"/>
		<read path="clientsData"/>
		<run component="transactionAdd" action="addClientData"/>
		<reset-args/>
		<read path="activeClient"/>
		<wait component="transactionAdd" event="transaction-add"/>
		<run component="utils" action="hideAllPages"/>
		<run component="db" action="saveTransaction"/>
		<run component="cash" action="show"/>
	</event>

	<event component="nfcReader" on="card-detect">
		<set path="activeCard" value="{0}"/>
		<run component="utils" action="getClientFromCard"/>
		<set path="activeClient" value="{1}"/>
		<reset-args/>
		<run component="utils" action="hideAllPages"/>
		<read path="activeClient"/>
		<read path="clientsData"/>
		<run component="transactionAdd" action="resetData"/>
		<run component="transactionAdd" action="addClientData"/>
		<reset-args/>
		<read path="activeCard"/>
		<run component="utils" action="calculateCardTotal"/>
		<run component="transactionAdd" action="bonusMode"/>
		<reset-args/>
		<read path="activeCard"/>
		<read path="cardsData"/>
		<read path="clientsData"/>
		<read path="transactionsData"/>
		<run component="history" action="populateByCardId"/>
		<run component="history" action="show"/>
		<run component="history" action="hideTitles"/>
		<reset-args/>
		<read path="activeClient"/>
		<run component="transactionAdd" action="show"/>
		<wait component="transactionAdd" event="transaction-add"/>
		<run component="utils" action="hideAllPages"/>
		<run component="db" action="saveTransaction"/>
		<run component="cash" action="show"/>
	</event>

	<event component="cash" on="tap-transaction-buy">
		<run component="utils" action="hideAllPages"/>
		<run component="transactionAdd" action="resetData"/>
		<run component="transactionAdd" action="show"/>
		<run component="transactionAdd" action="genericBuy"/>
		<reset-args/>
		<wait component="transactionAdd" event="transaction-add"/>
		<run component="utils" action="hideAllPages"/>
		<run component="db" action="saveBuy"/>
		<run component="cash" action="show"/>
	</event>

	<event component="clients" on="tap-client-edit">
		<set path="activeClient" value="{0}"/>
		<read path="clientsData/{0}"/>
		<run component="clients" action="edit"/>
	</event>

	<event component="clients" on="tap-client-update">
		<read path="activeClient"/>
		<run component="db" action="updateClients"/>
	</event>

	<event component="clients" on="tap-client-delete">
		<set path="activeClient" value="{0}"/>
		<reset-args/>
		<run component="blackScreen" action="show"/>
		<run component="popUpDeleteClient" action="show"/>
		<if test="{0} === 'delete'">
			<reset-args/>
			<read path="activeClient" />
			<run component="db" action="deleteClients"/>
		</if>
		<run component="popUpDeleteClient" action="hide"/>
		<run component="blackScreen" action="hide"/>
	</event>

	<event component="cash" on="tap-transaction-delete">
		<set path="activeClient" value="{0}"/>
		<reset-args/>
		<run component="blackScreen" action="show"/>
		<run component="popUpDeleteTransaction" action="show"/>
		<if test="{0} === 'delete'">
			<reset-args/>
			<read path="activeClient" />
			<run component="db" action="deleteTransactions"/>
		</if>
		<run component="popUpDeleteTransaction" action="hide"/>
		<run component="blackScreen" action="hide"/>

	</event>

	<event component="history" on="tap-transaction-delete">
		<set path="activeClient" value="{0}"/>
		<reset-args/>
		<run component="blackScreen" action="show"/>
		<run component="popUpDeleteTransaction" action="show"/>
		<if test="{0} === 'delete'">
			<reset-args/>
			<read path="activeClient" />
			<run component="db" action="deleteTransactions"/>
		</if>
		<run component="popUpDeleteTransaction" action="hide"/>
		<run component="blackScreen" action="hide"/>
	</event>

	<event component="clients" on="tap-client-history">
		<read path="clientsData/{0}"/>
		<read path="transactionsData"/>
		<read path="config/isLogged"/>
		<if test="{0}!=='-Ko7NjALDw2rdlK-BvV9' || {3} === 'true'">
			<run component="utils" action="hideAllPages"/>
			<run component="history" action="populate"/>
			<run component="history" action="show"/>
		</if>
	</event>

	<event component="cards" on="tap-card-history">
		<run component="utils" action="hideAllPages"/>
		<read path="cardsData"/>
		<read path="clientsData"/>
		<read path="transactionsData"/>
		<run component="history" action="populateByCardId"/>
		<run component="history" action="show"/>
	</event>

    <event component="header" on="tap-header">
		<if test="{0}==='cash'">
			<run component="utils" action="hideAllPages"/>
			<run component="cash" action="show"/>
		</if>
		<if test="{0}==='cards'">
			<run component="utils" action="hideAllPages"/>
			<run component="cards" action="show"/>
			<run component="cards" action="enterMode"/>
		</if>
		<if test="{0}==='clients'">
			<run component="utils" action="hideAllPages"/>
			<run component="clients" action="show"/>
			<run component="clients" action="closeEdit"/>
			<run component="clients" action="enterMode"/>
		</if>
		<if test="{0}==='users'">
			<run component="utils" action="hideAllPages"/>
			<run component="users" action="show"/>
		</if>
		<if test="{0}==='settings'">
			<run component="utils" action="hideAllPages"/>
			<run component="settings" action="show"/>
		</if>
		<if test="{0}==='print'">
			<run component="utils" action="hideAllPages"/>
			<run component="print" action="show"/>
		</if>
    </event>

	<event component="cards" on="tap-card-write">
		<run component="utils" action="writeCard"/>
	</event>

	<event component="cards" on="tap-card-delete">
		<set path="activeCard" value="{0}"/>
		<reset-args/>
		<run component="blackScreen" action="show"/>
		<run component="popUpDeleteCard" action="show"/>
		<if test="{0} === 'delete'">
			<reset-args/>
			<read path="activeCard" />
			<run component="db" action="deleteCard"/>
		</if>
		<run component="popUpDeleteCard" action="hide"/>
		<run component="blackScreen" action="hide"/>
	</event>

	<event component="print" on="tap-print-list">
		<run component="utils" action="printList"/>
	</event>

	<event component="print" on="tap-print-bills">
		<run component="utils" action="printBills"/>
	</event>

	<event component="print" on="tap-print-cards">
		<run component="utils" action="printCards"/>
	</event>

	<event component="print" on="tap-print-clients">
		<run component="utils" action="printClients"/>
	</event>

	<event component="settings" on="logout">
		<run component="utils" action="logout"/>
		<run component="utils" action="hideAllPages"/>
		<run component="clients" action="show"/>
	</event>

	<event component="print" on="tap-export-clients">
		<run component="utils" action="exportClients"/>
	</event>

</use-cases>
